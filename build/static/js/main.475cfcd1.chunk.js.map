{"version":3,"sources":["TodoInput.js","TodoList.js","TodoPage.js","TodoCalendar.js","index.js"],"names":["inputstyle","width","margin","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emitEmpty","todoInput","focus","setState","thing","onInputChange","e","target","value","onAddNewItem","todoItemHandler","state","_this2","suffix","react_default","a","createElement","icon","type","onClick","input","placeholder","prefix","style","color","addonAfter","onChange","onPressEnter","ref","node","Component","ulstyle","listStyle","padding","badgestyle","overflow","whiteSpace","textOverflow","fontSize","TodoList","_ref","todos","listyle","completeHandler","map","item","index","key","content","badge","status","text","TabPane","Tabs","clearListstyle","textAlign","TabView","items","itemsOnDay","tabs","defaultActiveKey","tab","src_TodoInput","src_TodoList","calendarListstyle","TodoCalendar","dateCellrender","listdata","date","onSelect","onSelecthandler","calendar","dateCellRender","panel","maxWidth","display","justifyContent","left_panel","right_panel","height","App","onReloadhandler","localStorage","setItem","JSON","stringify","day","chosen","newTodoItemHandler","newlistOnday","toConsumableArray","splice","newtodos","oneTodo","newTodo","Date","getDate","flag","getItem","saves","parse","mock","Array","idx","concat","window","addEventListener","removeEventListener","className","src_TodoCalendar","TodoPage","React","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.475cfcd1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input, Icon } from \"antd\";\r\n\r\nconst inputstyle = {\r\n  width: \"95%\",\r\n  margin: \"0.1rem 0.2rem\"\r\n};\r\n\r\nclass TodoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      thing: \"\"\r\n    };\r\n  }\r\n\r\n  emitEmpty = () => {\r\n    this.todoInput.focus();\r\n    this.setState({ thing: \"\" });\r\n  };\r\n\r\n  onInputChange = e => {\r\n    this.setState({ thing: e.target.value });\r\n  };\r\n\r\n  onAddNewItem = () => {\r\n    this.props.todoItemHandler(this.state.thing);\r\n    this.emitEmpty();\r\n  };\r\n\r\n  render() {\r\n    const thing = this.state.thing;\r\n    const suffix = thing ? (\r\n      <Icon type=\"close-circle\" onClick={this.emitEmpty} />\r\n    ) : null;\r\n    return (\r\n      <Input\r\n        placeholder=\"Enter your things\"\r\n        prefix={<Icon type=\"edit\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n        addonAfter={<Icon type=\"plus\" onClick={this.onAddNewItem} />}\r\n        onChange={this.onInputChange}\r\n        onPressEnter={this.onAddNewItem}\r\n        suffix={suffix}\r\n        value={thing}\r\n        ref={node => (this.todoInput = node)}\r\n        style={inputstyle}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from \"react\";\r\nimport { Badge } from \"antd\";\r\n\r\nconst ulstyle = {\r\n  listStyle: \"none\",\r\n  margin: \"0\",\r\n  padding: \"0\"\r\n};\r\n\r\nconst badgestyle = {\r\n  overflow: \"hidden\",\r\n  whiteSpace: \"nowrap\",\r\n  width: \"100%\",\r\n  textOverflow: \"ellipsis\",\r\n  fontSize: \"12px\"\r\n};\r\n\r\nconst TodoList = ({ todos, listyle, completeHandler }) => {\r\n  /*\r\n     only render lists when list exists\r\n   */\r\n  return (\r\n    <ul style={ulstyle}>\r\n      {todos &&\r\n        todos.map((item, index) => (\r\n          <li key={item.content} style={listyle}>\r\n            <Badge\r\n              status={item.type}\r\n              text={item.content}\r\n              //workaround for showALL\r\n              onClick={() => completeHandler && completeHandler(item, index)}\r\n              style={badgestyle}\r\n            />\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport TodoInput from \"./TodoInput\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst clearListstyle = {\r\n  textAlign: \"left\",\r\n  margin: \"2px 0.5rem\",\r\n  fontSize: \"1rem\"\r\n};\r\n\r\nconst TabView = ({ items, itemsOnDay, todoItemHandler, completeHandler }) => {\r\n  return (\r\n    <Tabs defaultActiveKey=\"1\">\r\n      <TabPane tab=\"with Dates\" key=\"1\">\r\n        <TodoInput todoItemHandler={todoItemHandler} />\r\n        <br />\r\n\r\n        <TodoList\r\n          todos={itemsOnDay}\r\n          completeHandler={completeHandler}\r\n          listyle={clearListstyle}\r\n        />\r\n      </TabPane>\r\n      <TabPane tab=\"All\" key=\"2\">\r\n      {\r\n        items.map((item,index)=>(\r\n          <TodoList key={index}\r\n               todos={item}\r\n               completeHandler={null}\r\n               listyle={clearListstyle}\r\n          />    \r\n        ))\r\n      }\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default TabView;\r\n","import React, { Component } from \"react\";\r\nimport { Calendar } from \"antd\";\r\n\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst calendarListstyle = {\r\n  textAlign: \"left\",\r\n  margin: \"0\"\r\n};\r\n\r\nclass TodoCalendar extends Component {\r\n\r\n  dateCellrender = value => {\r\n    const listdata = this.props.todos[value.date()] || [];\r\n    return (\r\n      <TodoList\r\n        todos={listdata}\r\n        completeHandler={this.props.completeHandler}\r\n        listyle={calendarListstyle}\r\n      />\r\n    );\r\n  };\r\n\r\n  onSelect = value => {\r\n    this.props.onSelecthandler(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Calendar\r\n        dateCellRender={this.dateCellrender}\r\n        onSelect={this.onSelect}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoCalendar;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport TabView from \"./TodoPage\";\r\nimport TodoCalendar from \"./TodoCalendar\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./styles.css\";\r\n\r\nconst panel = {\r\n  maxWidth: \"960px\",\r\n  margin: \"0 auto\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\"\r\n};\r\nconst left_panel = { width: \"65%\" };\r\nconst right_panel = {\r\n  width: \"35%\",\r\n  height: \"80vh\"\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chosen: new Date().getDate(),\r\n      todos: []\r\n    };\r\n  }\r\n\r\n  onReloadhandler = (e) => {\r\n      localStorage.setItem(\"flag\", \"yes\");\r\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n  }\r\n\r\n/* if there is previous data, then load it \r\n   todos: are 2d-array,\r\n   [[],[],...]\r\n   1st-dim: all days lists,\r\n   2nd-dim: each days lists\r\n   each array-element: type:(done or not-done), content:(description text)\r\n*/\r\n  componentDidMount() {\r\n    \r\n    let flag = localStorage.getItem(\"flag\");\r\n    let saves = JSON.parse(localStorage.getItem(\"todos\"));\r\n    let mock = new Array(32);\r\n    for (let idx = 0; idx < 32; ++idx) mock.concat([]);\r\n    mock.splice(1, 1, [\r\n      { type: \"warning\", content: \"buy water\" },\r\n      { type: \"warning\", content: \"check bills\" },\r\n      { type: \"warning\", content: \"long long long long long long event\" },\r\n      { type: \"success\", content: \"pick up brothers\" }\r\n    ]);\r\n    mock.splice(3, 1, [\r\n      { type: \"warning\", content: \"need todo1\" },\r\n      { type: \"warning\", content: \"want check 2\" },\r\n      {\r\n        type: \"warning\",\r\n        content: \"test for long long long long long long\"\r\n      },\r\n      { type: \"success\", content: \"take-off now\" }\r\n    ]);\r\n\r\n    this.setState({ todos: flag === \"yes\" ? saves : mock });\r\n    window.addEventListener('beforeunload',this.onReloadhandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.onReloadhandler();\r\n    window.removeEventListener('beforeunload',this.onReloadhandler);\r\n    //localStorage.setItem(\"flag\", \"yes\");\r\n    //localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n  }\r\n\r\n  onSelecthandler = day => {\r\n    this.setState({ chosen: day.date() });\r\n  };\r\n\r\n  /*\r\n     input sends text, then\r\n     1st: find current day lists\r\n     2nd: add new text item into idx=0 position\r\n     3rd: geneate new all todos\r\n     4th: setState to render\r\n  */\r\n  newTodoItemHandler = text => {\r\n    let newlistOnday = this.state.todos[this.state.chosen]\r\n      ? [...this.state.todos[this.state.chosen]]\r\n      : [];\r\n    newlistOnday.splice(1, 0, { type: \"warning\", content: text });\r\n\r\n    let newtodos = [...this.state.todos];\r\n    newtodos.splice(this.state.chosen, 1, newlistOnday);\r\n    this.setState({ todos: newtodos });\r\n  };\r\n \r\n  /*\r\n     as the same as newTodoItemHandler,\r\n     the different is to control status(or type) here\r\n   */\r\n  completeHandler = (oneTodo, index) => {\r\n    const newTodo = {\r\n      type: oneTodo.type === \"warning\" ? \"success\" : \"warning\",\r\n      content: oneTodo.content\r\n    };\r\n\r\n    let newlistOnday = this.state.todos[this.state.chosen]\r\n      ? [...this.state.todos[this.state.chosen]]\r\n      : [];\r\n    newlistOnday.splice(index, 1, newTodo);\r\n    let newtodos = [...this.state.todos];\r\n    newtodos.splice(this.state.chosen, 1, newlistOnday);\r\n    this.setState({ todos: newtodos });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\" style={panel}>\r\n        <div style={left_panel}>\r\n          <TodoCalendar\r\n            onSelecthandler={this.onSelecthandler}\r\n            completeHandler={this.completeHandler}\r\n            todos={this.state.todos}\r\n          />\r\n        </div>\r\n        <div style={right_panel}>\r\n          <TabView\r\n            items={this.state.todos}\r\n            itemsOnDay={this.state.todos[this.state.chosen]}\r\n            todoItemHandler={this.newTodoItemHandler}\r\n            completeHandler={this.completeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}