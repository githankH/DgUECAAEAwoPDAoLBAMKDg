{"version":3,"sources":["TodoInput.js","TodoList.js","TodoPage.js","TodoCalendar.js","index.js"],"names":["inputstyle","width","margin","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emitEmpty","todoInput","focus","setState","thing","onInputChange","e","target","value","onAddNewItem","todoItemHandler","state","_this2","suffix","react_default","a","createElement","icon","type","onClick","input","placeholder","prefix","style","color","addonAfter","onChange","onPressEnter","ref","node","Component","ulstyle","listStyle","padding","badgestyle","overflow","whiteSpace","textOverflow","fontSize","TodoList","_ref","todos","listyle","completeHandler","map","item","index","key","content","badge","status","text","TabPane","Tabs","clearListstyle","textAlign","TabView","items","itemsOnDay","tabs","defaultActiveKey","tab","src_TodoInput","src_TodoList","calendarListstyle","TodoCalendar","dateCellrender","listdata","date","onSelect","onSelecthandler","calendar","dateCellRender","panel","maxWidth","display","justifyContent","left_panel","right_panel","height","App","day","chosen","newTodoItemHandler","newlistOnday","toConsumableArray","splice","newtodos","oneTodo","newTodo","Date","getDate","flag","localStorage","getItem","saves","JSON","parse","mock","Array","idx","concat","setItem","stringify","className","src_TodoCalendar","TodoPage","React","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.67911bb3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, Icon } from \"antd\";\n\nconst inputstyle = {\n  width: \"95%\",\n  margin: \"0.1rem 0.2rem\"\n};\n\nclass TodoInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thing: \"\"\n    };\n  }\n\n  emitEmpty = () => {\n    this.todoInput.focus();\n    this.setState({ thing: \"\" });\n  };\n\n  onInputChange = e => {\n    this.setState({ thing: e.target.value });\n  };\n\n  onAddNewItem = () => {\n    this.props.todoItemHandler(this.state.thing);\n    this.emitEmpty();\n  };\n\n  render() {\n    const thing = this.state.thing;\n    const suffix = thing ? (\n      <Icon type=\"close-circle\" onClick={this.emitEmpty} />\n    ) : null;\n    return (\n      <Input\n        placeholder=\"Enter your things\"\n        prefix={<Icon type=\"edit\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        addonAfter={<Icon type=\"plus\" onClick={this.onAddNewItem} />}\n        onChange={this.onInputChange}\n        onPressEnter={this.onAddNewItem}\n        suffix={suffix}\n        value={thing}\n        ref={node => (this.todoInput = node)}\n        style={inputstyle}\n      />\n    );\n  }\n}\n\nexport default TodoInput;\n","import React from \"react\";\nimport { Badge } from \"antd\";\n\nconst ulstyle = {\n  listStyle: \"none\",\n  margin: \"0\",\n  padding: \"0\"\n};\n\nconst badgestyle = {\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  width: \"100%\",\n  textOverflow: \"ellipsis\",\n  fontSize: \"12px\"\n};\n\nconst TodoList = ({ todos, listyle, completeHandler }) => {\n  return (\n    <ul style={ulstyle}>\n      {todos &&\n        todos.map((item, index) => (\n          <li key={item.content} style={listyle}>\n            <Badge\n              status={item.type}\n              text={item.content}\n              //workaround for showALL\n              onClick={() => completeHandler && completeHandler(item, index)}\n              style={badgestyle}\n            />\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport TodoInput from \"./TodoInput\";\nimport TodoList from \"./TodoList\";\n\nconst TabPane = Tabs.TabPane;\n\nconst clearListstyle = {\n  textAlign: \"left\",\n  margin: \"2px 0.5rem\",\n  fontSize: \"1rem\"\n};\n\nconst TabView = ({ items, itemsOnDay, todoItemHandler, completeHandler }) => {\n  return (\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane tab=\"with Dates\" key=\"1\">\n        <TodoInput todoItemHandler={todoItemHandler} />\n        <br />\n\n        <TodoList\n          todos={itemsOnDay}\n          completeHandler={completeHandler}\n          listyle={clearListstyle}\n        />\n      </TabPane>\n      <TabPane tab=\"All\" key=\"2\">\n      {\n        items.map((item,index)=>(\n          <TodoList key={index}\n          todos={item}\n          completeHandler={null}\n          listyle={clearListstyle}\n        />    \n        ))\n      }\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default TabView;\n","import React, { Component } from \"react\";\nimport { Calendar } from \"antd\";\n\nimport TodoList from \"./TodoList\";\n\nconst calendarListstyle = {\n  textAlign: \"left\",\n  margin: \"0\"\n};\n\nclass TodoCalendar extends Component {\n\n  dateCellrender = value => {\n    const listdata = this.props.todos[value.date()] || [];\n    return (\n      <TodoList\n        todos={listdata}\n        completeHandler={this.props.completeHandler}\n        listyle={calendarListstyle}\n      />\n    );\n  };\n\n  onSelect = value => {\n    this.props.onSelecthandler(value);\n  };\n\n  render() {\n    return (\n      <Calendar\n        dateCellRender={this.dateCellrender}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nexport default TodoCalendar;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport TabView from \"./TodoPage\";\nimport TodoCalendar from \"./TodoCalendar\";\n\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nconst panel = {\n  maxWidth: \"960px\",\n  margin: \"0 auto\",\n  display: \"flex\",\n  justifyContent: \"space-between\"\n};\nconst left_panel = { width: \"65%\" };\nconst right_panel = {\n  width: \"35%\",\n  height: \"80vh\"\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chosen: new Date().getDate(),\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    let flag = localStorage.getItem(\"flag\");\n    let saves = JSON.parse(localStorage.getItem(\"todos\"));\n    let mock = new Array(32);\n    for (let idx = 0; idx < 32; ++idx) mock.concat([]);\n    mock.splice(1, 1, [\n      { type: \"warning\", content: \"buy water\" },\n      { type: \"warning\", content: \"check bills\" },\n      { type: \"warning\", content: \"long long long long long long event\" },\n      { type: \"success\", content: \"pick up brothers\" }\n    ]);\n    mock.splice(3, 1, [\n      { type: \"warning\", content: \"need todo1\" },\n      { type: \"warning\", content: \"want check 2\" },\n      {\n        type: \"warning\",\n        content: \"test for long long long long long long\"\n      },\n      { type: \"success\", content: \"take-off now\" }\n    ]);\n\n    this.setState({ todos: flag === \"yes\" ? saves : mock });\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem(\"flag\", \"yes\");\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n\n  onSelecthandler = day => {\n    this.setState({ chosen: day.date() });\n  };\n\n  newTodoItemHandler = text => {\n    let newlistOnday = this.state.todos[this.state.chosen]\n      ? [...this.state.todos[this.state.chosen]]\n      : [];\n    newlistOnday.splice(1, 0, { type: \"warning\", content: text });\n\n    let newtodos = [...this.state.todos];\n    newtodos.splice(this.state.chosen, 1, newlistOnday);\n    this.setState({ todos: newtodos });\n  };\n\n  completeHandler = (oneTodo, index) => {\n    const newTodo = {\n      type: oneTodo.type === \"warning\" ? \"success\" : \"warning\",\n      content: oneTodo.content\n    };\n\n    let newlistOnday = this.state.todos[this.state.chosen]\n      ? [...this.state.todos[this.state.chosen]]\n      : [];\n    newlistOnday.splice(index, 1, newTodo);\n    let newtodos = [...this.state.todos];\n    newtodos.splice(this.state.chosen, 1, newlistOnday);\n    this.setState({ todos: newtodos });\n  };\n  render() {\n    return (\n      <div className=\"App\" style={panel}>\n        <div style={left_panel}>\n          <TodoCalendar\n            onSelecthandler={this.onSelecthandler}\n            completeHandler={this.completeHandler}\n            todos={this.state.todos}\n          />\n        </div>\n        <div style={right_panel}>\n          <TabView\n            items={this.state.todos}\n            itemsOnDay={this.state.todos[this.state.chosen]}\n            todoItemHandler={this.newTodoItemHandler}\n            completeHandler={this.completeHandler}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}